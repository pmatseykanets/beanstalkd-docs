(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{194:function(t,e,o){"use strict";o.r(e);var s=o(0),a=Object(s.a)({},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),o("p",[o("strong",[t._v("Beanstalkd is a simple, fast work queue.")])]),t._v(" "),o("p",[t._v("Its interface is generic, and it was originally designed for reducing the latency of page views in high-volume web applications by running time-consuming tasks asynchronously.")]),t._v(" "),o("p",[t._v("You can think of "),o("code",[t._v("beanstalkd")]),t._v(' as a big "to-do" list for your distributed application. If there is a unit of work that you want to defer to later (say, sending an email, pushing some data to a slow external service, pulling data from a slow external service, generating high-quality image thumbnails) you put a description of that work, a '),o("strong",[t._v('"job"')]),t._v(", into "),o("code",[t._v("beanstalkd")]),t._v(". Some processes (such as web request handlers), "),o("strong",[t._v('"producers"')]),t._v(", put jobs into the queue. Other processes, "),o("strong",[t._v('"workers"')]),t._v(", take jobs out of the queue and process them.")]),t._v(" "),o("div",{staticClass:"tip custom-block"},[o("p",[t._v("See "),o("router-link",{attrs:{to:"/protocol/"}},[t._v("Protocol")]),t._v(" for details.")],1)])])},[],!1,null,null,null);e.default=a.exports}}]);