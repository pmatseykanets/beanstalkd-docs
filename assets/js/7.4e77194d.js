(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{193:function(e,o,v){"use strict";v.r(o);var t=v(0),_=Object(t.a)({},function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"configuration"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),v("p",[v("code",[e._v("beaqnstalkd")]),e._v(" has no configuration file and only a handful of command-line options.")]),e._v(" "),v("h2",{attrs:{id:"options"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#options","aria-hidden":"true"}},[e._v("#")]),e._v(" Options")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("-b <path>")])]),e._v(" "),v("p",[e._v("Use a binlog to keep jobs on persistent storage in directory "),v("code",[e._v("<path>")]),e._v(".\nUpon startup, "),v("code",[e._v("beanstalkd")]),e._v(" will recover any binlog that is present\nin "),v("code",[e._v("<path>")]),e._v(", then, during normal operation, append new jobs and\nchanges in state to the binlog.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-c")])]),e._v(" "),v("p",[e._v("Perform online, incremental compaction of binlog files. Negates\n"),v("code",[e._v("-n")]),e._v(". This is the default behavior.")]),e._v(" "),v("p",[e._v("Do not use this option, except to negate "),v("code",[e._v("-n")]),e._v(". Both "),v("code",[e._v("-c")]),e._v(" and "),v("code",[e._v("-n")]),e._v("\nwill likely be removed in a future "),v("code",[e._v("beanstalkd")]),e._v(" release.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-f <ms>")])]),e._v(" "),v("p",[e._v("Call "),v("code",[e._v("fsync")]),e._v(" at most once every "),v("code",[e._v("<ms>")]),e._v(" milliseconds. Larger values\nfor "),v("code",[e._v("<ms>")]),e._v(" reduce disk activity and improve speed at the cost of\nsafety. A power failure could result in the loss of up to "),v("code",[e._v("<ms>")]),e._v("\nmilliseconds of history.")]),e._v(" "),v("p",[e._v("A "),v("code",[e._v("<ms>")]),e._v(" value of "),v("code",[e._v("0")]),e._v(" will cause "),v("code",[e._v("beanstalkd")]),e._v(" to call "),v("code",[e._v("fsync")]),e._v(" every time\nit writes to the binlog.")]),e._v(" "),v("p",[e._v("This option has no effect without "),v("code",[e._v("-b")]),e._v(".")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-F")])]),e._v(" "),v("p",[e._v("Never call "),v("code",[e._v("fsync")]),e._v(". Equivalent to "),v("code",[e._v("-f")]),e._v(" with an infinite "),v("code",[e._v("<ms>")]),e._v(" value.")]),e._v(" "),v("p",[e._v("This is the default behavior.")]),e._v(" "),v("p",[e._v("This option has no effect without "),v("code",[e._v("-b")]),e._v(".")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-h")])]),e._v(" "),v("p",[e._v("Show a brief help message and exit.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-l <addr>")])]),e._v(" "),v("p",[e._v("Listen on address "),v("code",[e._v("<addr>")]),e._v(" (default is "),v("code",[e._v("0.0.0.0")]),e._v(").")]),e._v(" "),v("p",[e._v("Option "),v("code",[e._v("-l")]),e._v(" has no effect if "),v("code",[e._v("sd-daemon(5)")]),e._v(" socket activation is\nbeing used.")]),e._v(" "),v("p",[e._v("See also "),v("a",{attrs:{href:"#environment"}},[e._v("Environment")]),e._v(".")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-n")])]),e._v(" "),v("p",[e._v("Turn off binlog compaction, negating "),v("code",[e._v("-c")]),e._v(".")]),e._v(" "),v("p",[e._v("Do not use this option. Both "),v("code",[e._v("-c")]),e._v(" and "),v("code",[e._v("-n")]),e._v(" will likely be removed\nin a future "),v("code",[e._v("beanstalkd")]),e._v(" release.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-p <port>")])]),e._v(" "),v("p",[e._v("Listen on TCP port "),v("code",[e._v("<port>")]),e._v(". Default is "),v("code",[e._v("11300")]),e._v(".")]),e._v(" "),v("p",[e._v("Option "),v("code",[e._v("-p")]),e._v(" has no effect if "),v("code",[e._v("sd-daemon")]),e._v(" socket activation is\nbeing used.")]),e._v(" "),v("p",[e._v("See also "),v("a",{attrs:{href:"#environment"}},[e._v("Environment")]),e._v(".")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-s <bytes>")])]),e._v(" "),v("p",[e._v("The size in bytes of each binlog file.")]),e._v(" "),v("p",[e._v("This option has no effect without "),v("code",[e._v("-b")]),e._v(".")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-u <user>")])]),e._v(" "),v("p",[e._v("Become the user "),v("code",[e._v("<user>")]),e._v(" and its primary group.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-V")])]),e._v(" "),v("p",[e._v("Increase verbosity. May be used more than once to produce more\nverbose output. The output format is subject to change.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-v")])]),e._v(" "),v("p",[e._v("Print the version string and exit.")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-z <bytes>")])]),e._v(" "),v("p",[e._v("The maximum size in bytes of a job.")])])]),e._v(" "),v("h2",{attrs:{id:"environment"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#environment","aria-hidden":"true"}},[e._v("#")]),e._v(" Environment")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("LISTEN_PID")]),e._v(", "),v("code",[e._v("LISTEN_FDS")])]),e._v(" "),v("p",[e._v("These variables can be set by "),v("code",[e._v("init")]),e._v(". See "),v("code",[e._v("sd_listen_fds")]),e._v(" for details.")])])])])},[],!1,null,null,null);o.default=_.exports}}]);